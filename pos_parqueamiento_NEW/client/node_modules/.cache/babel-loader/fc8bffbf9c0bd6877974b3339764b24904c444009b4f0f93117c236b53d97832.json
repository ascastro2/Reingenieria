{"ast":null,"code":"import _objectSpread from\"C:/Users/Asus/Documents/GitHub/Reingenieria/pos_parqueamiento_NEW/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth debe ser usado dentro de un AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Usuario de prueba para desarrollo\nconst usuarioPrueba={id:1,email:'admin@parqueamiento.com',nombre:'Administrador',apellido:'Sistema',rol:'admin'};// Verificar si hay un token guardado al cargar la aplicación\nuseEffect(()=>{const token=localStorage.getItem('token');if(token){// Configurar el token en axios\naxios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);// Verificar si el token es válido\nverifyToken();}else{setLoading(false);}// Configurar interceptor para agregar token a todas las peticiones\nconst requestInterceptor=axios.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Limpiar interceptor al desmontar\nreturn()=>{axios.interceptors.request.eject(requestInterceptor);};},[]);const verifyToken=async()=>{try{const response=await axios.get('/api/auth/verify');setUser(response.data.user);}catch(error){// Token inválido, limpiar localStorage\nlocalStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];}finally{setLoading(false);}};const login=async(email,password)=>{try{// Para desarrollo, simular login exitoso\nif(email==='admin@parqueamiento.com'&&password==='admin123'){// Simular token válido para desarrollo\nconst token='dev_token_'+Date.now();localStorage.setItem('token',token);axios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);setUser(usuarioPrueba);return;}// En producción, usar la API real\nconst response=await axios.post('/api/auth/login',{email,password});const{token,user:userData}=response.data.data;// Guardar token en localStorage\nlocalStorage.setItem('token',token);// Configurar token en axios\naxios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);// Actualizar estado del usuario\nsetUser(userData);}catch(error){var _error$response,_error$response$data;throw new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Error en el inicio de sesión');}};const logout=async()=>{try{// Llamar al endpoint de logout si es necesario\nawait axios.post('/api/auth/logout');}catch(error){console.error('Error en logout:',error);}finally{// Limpiar estado local\nlocalStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];setUser(null);}};const updateUser=userData=>{if(user){setUser(_objectSpread(_objectSpread({},user),userData));}};const value={user,isAuthenticated:!!user,loading,login,logout,updateUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","usuarioPrueba","id","email","nombre","apellido","rol","token","localStorage","getItem","defaults","headers","common","concat","verifyToken","requestInterceptor","interceptors","request","use","config","Authorization","error","Promise","reject","eject","response","get","data","removeItem","login","password","Date","now","setItem","post","userData","_error$response","_error$response$data","logout","console","updateUser","_objectSpread","value","isAuthenticated","Provider"],"sources":["C:/Users/Asus/Documents/GitHub/Reingenieria/pos_parqueamiento_NEW/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  nombre: string;\r\n  apellido: string;\r\n  rol: 'admin' | 'vendedor' | 'cajero';\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  updateUser: (userData: Partial<User>) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Usuario de prueba para desarrollo\r\n  const usuarioPrueba: User = {\r\n    id: 1,\r\n    email: 'admin@parqueamiento.com',\r\n    nombre: 'Administrador',\r\n    apellido: 'Sistema',\r\n    rol: 'admin'\r\n  };\r\n\r\n  // Verificar si hay un token guardado al cargar la aplicación\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // Configurar el token en axios\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Verificar si el token es válido\r\n      verifyToken();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n\r\n    // Configurar interceptor para agregar token a todas las peticiones\r\n    const requestInterceptor = axios.interceptors.request.use(\r\n      (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    // Limpiar interceptor al desmontar\r\n    return () => {\r\n      axios.interceptors.request.eject(requestInterceptor);\r\n    };\r\n  }, []);\r\n\r\n  const verifyToken = async () => {\r\n    try {\r\n      const response = await axios.get('/api/auth/verify');\r\n      setUser(response.data.user);\r\n    } catch (error) {\r\n      // Token inválido, limpiar localStorage\r\n      localStorage.removeItem('token');\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      // Para desarrollo, simular login exitoso\r\n      if (email === 'admin@parqueamiento.com' && password === 'admin123') {\r\n        // Simular token válido para desarrollo\r\n        const token = 'dev_token_' + Date.now();\r\n        localStorage.setItem('token', token);\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        setUser(usuarioPrueba);\r\n        return;\r\n      }\r\n\r\n      // En producción, usar la API real\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const { token, user: userData } = response.data.data;\r\n      \r\n      // Guardar token en localStorage\r\n      localStorage.setItem('token', token);\r\n      \r\n      // Configurar token en axios\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Actualizar estado del usuario\r\n      setUser(userData);\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.error || 'Error en el inicio de sesión');\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      // Llamar al endpoint de logout si es necesario\r\n      await axios.post('/api/auth/logout');\r\n    } catch (error) {\r\n      console.error('Error en logout:', error);\r\n    } finally {\r\n      // Limpiar estado local\r\n      localStorage.removeItem('token');\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const updateUser = (userData: Partial<User>) => {\r\n    if (user) {\r\n      setUser({ ...user, ...userData });\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}